{"version":3,"file":"static/js/901.1767956e.chunk.js","mappings":"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","sources":["modules/LoginForm/initialState.js","modules/LoginForm/fields.js","webpack://react-homework-template/./src/modules/LoginForm/login-form.module.css?ee4b","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const initialState = {\n  email: \"\",\n  password: \"\",\n};\n","export const fields = {\n  email: {\n    label: \"Email:\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Input email\",\n    required: true,\n  },\n  password: {\n    label: \"Password:\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Input password\",\n    required: true,\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login-form_form__gITZM\"};","import PropTypes from \"prop-types\";\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\n\nimport TextField from \"../../shared/components/TextField\";\nimport Button from \"../../shared/components/Button\";\nimport s from \"./login-form.module.css\";\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <TextField value={email} onChange={handleChange} {...fields.email} />\n      <TextField value={password} onChange={handleChange} {...fields.password} />\n      <Button text=\"Login\" />\n    </form>\n  );\n};\n\nLoginForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import { useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { loginUser } from \"../../redux/auth/auth-operations\";\n\nimport useIsLogin from \"../../shared/hooks/useLogin\";\n\nimport LoginForm from \"../../modules/LoginForm\";\n\nconst LoginPage = () => {\n\n  const dispatch = useDispatch();\n\n  const isLogin = useIsLogin();\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  const handleSubmit = (data) => {\n    dispatch(loginUser(data));\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Login:</h2>\n      <LoginForm onSubmit={handleSubmit} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__aZIRC\"};","import PropTypes from \"prop-types\";\nimport s from \"./button.module.css\";\n\nconst Button = (props) => {\n  const { type, text, onClick } = props;\n  return (\n    <button className={s.btn} onClick={onClick} type={type}>\n      {text}\n    </button>\n  );\n};\nButton.defaultProps = {\n  type: \"submit\",\n  onClick: () => {},\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__qaF-n\",\"label\":\"text-field_label__VYX-y\",\"input\":\"text-field_input__YM8fs\"};","import { nanoid } from \"@reduxjs/toolkit\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./text-field.module.css\";\n\nconst TextField = (props) => {\n  const {\n    label,\n    name,\n    value,\n    onChange,\n    placeholder,\n    required,\n    type,\n    pattern,\n    title,\n  } = props;\n\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={id} className={s.label}>\n        {label}\n      </label>\n      <input\n        onChange={onChange}\n        id={id}\n        className={s.input}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        required={required}\n        pattern={pattern}\n        title={title}\n      />\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\",\n  required: false,\n  onChange: () => {},\n};\n\nTextField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ]).isRequired,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default TextField;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useForm = ({ onSubmit, initialState, isReset }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    if (isReset) {\n      setState({ ...initialState });\n    }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true,\n};\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired,\n};\n\nexport default useForm;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["initialState","email","password","fields","label","name","type","placeholder","required","LoginForm","onSubmit","useForm","state","handleChange","handleSubmit","className","s","TextField","value","onChange","Button","text","defaultProps","dispatch","useDispatch","useIsLogin","to","data","loginUser","props","onClick","pattern","title","id","useMemo","nanoid","htmlFor","isReset","useState","setState","target","checked","newValue","prevState","e","preventDefault","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}