{"version":3,"file":"static/js/936.f7b19baa.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selector.js","webpack://react-homework-template/./src/modules/PhoneBook/Contacts/ContactItem/contact-item.module.css?f49a","modules/PhoneBook/Contacts/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/modules/PhoneBook/Contacts/contacts.module.css?1798","modules/PhoneBook/Contacts/Contacts.jsx","modules/PhoneBook/ContactForm/initialState.js","modules/PhoneBook/ContactForm/fields.js","webpack://react-homework-template/./src/modules/PhoneBook/ContactForm/contactForm.module.css?a3d6","modules/PhoneBook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/modules/PhoneBook/Filter/filter.module.css?4106","modules/PhoneBook/Filter/Filter.jsx","webpack://react-homework-template/./src/modules/PhoneBook/phone-book.module.css?ff7a","modules/PhoneBook/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = (store) => {\n  return store.contacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contact-item_item__Vpt0m\",\"wrapper\":\"contact-item_wrapper__eFg5M\"};","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../../../../shared/components/Button\";\n\nimport s from \"./contact-item.module.css\";\n\nconst ContactItem = (props) => {\n\n  const { name, number, onClick, id } = props;\n\n  return (\n    <li className={s.item}>\n      {/* <a className={s.link} href={`tel:${number}`}>\n        <div className={s.wrapper}>\n          <p className={s.name}>{name}</p>\n        </div>\n        <div className={s.wrapper}>\n          <p className={s.number}>{number}</p>\n        </div>\n      </a> */}\n      <div className={s.wrapper}>\n        {name} : {number}\n      </div>\n\n      <Button\n        className={s.button}\n        text=\"Detele\"\n        type=\"button\"\n        onClick={(e) => {onClick(id);}}\n      />\n    </li>\n  );\n}\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default memo(ContactItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts_list__zH7QU\"};","import PropTypes from \"prop-types\";\nimport ContactItem from \"./ContactItem\";\n\nimport s from \"./contacts.module.css\";\n\nconst Contacts = ({ items, onClick }) => {\n\n  const elements = items.map((item) => {\n    const { number, name, id } = item;\n    return (\n      <ContactItem\n        key={id}\n        id={id}\n        onClick={onClick}\n        number={number}\n        name={name}\n      />\n    );\n  });\n\n  return <ul className={s.list}>{elements}</ul>;\n}\n\nContacts.defaultProps = {\n  items: [],\n};\n\nContacts.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Contacts;\n","export const initialState = { name: \"\", number: \"\" };\n","export const fields = {\n  name: {\n    label: \"Name\",\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    required: true,\n    placeholder: \"enter name\",\n  },\n  number: {\n    label: \"Number\",\n    type: \"tel\",\n    name: \"number\",\n    title:\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n    required: true,\n    placeholder: \"enter number\",\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__iMHsr\",\"label\":\"contactForm_label__ez0Qp\",\"input\":\"contactForm_input__nY5Ms\",\"btn\":\"contactForm_btn__5BpcF\"};","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextField from \"../../../shared/components/TextField\";\nimport Button from \"../../../shared/components/Button\";\n\nimport useForm from \"../../../shared/hooks/useForm\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\n\nimport s from \"./contactForm.module.css\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n  });\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <TextField value={name} onChange={handleChange} {...fields.name} />\n      <TextField value={number} onChange={handleChange} {...fields.number} />\n      <Button text=\"Add contact\" />\n    </form>\n  );\n};\n\nContactForm.defaultProps = {\n  onSubmit: () => {},\n};\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(ContactForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__FYczH\",\"input\":\"filter_input__AjN5i\"};","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./filter.module.css\";\n\nconst Filter = ({ onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        onChange={onChange}\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Input name\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default memo(Filter);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"phone-book_wrapper__UOwyI\"};","import { useSelector } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  fetchContacts,\n  removeContact,\n  addContact,\n} from \"../../redux/contacts/contacts-operations\";\nimport { getContacts } from \"../../redux/contacts/contacts-selector\";\nimport { useDispatch } from \"react-redux\";\n\nimport Contacts from \"./Contacts\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\n\nimport s from \"./phone-book.module.css\";\n\nconst PhoneBook = () => {\n\n  const [filter, setFilter] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const contactsStore = useSelector(getContacts);\n  const { items, error, loading } = contactsStore;\n  \n  const getVisibleContacts = () => {\n    if (!filter) {\n      return items;\n    }\n    const newItems = items.filter((e) => {\n      const { name } = e;\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n    return newItems;\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAdd = useCallback(\n    (el) => dispatch(addContact(el)),\n    [dispatch]\n  );\n  const onRemove = useCallback(\n    (id) => {\n      dispatch(removeContact(id));\n    },\n    [dispatch]\n  );\n\n  const changeFilter = useCallback(\n    ({ target: { value } }) => setFilter(value.trim()),\n    [setFilter]\n  );\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className=\"container\">\n      <div className={s.wrapper}>\n        <div>\n          <h1 className=\"title\">Phonebook</h1>\n          <Filter onChange={changeFilter} />\n          {loading && <p>Loading...</p>}\n          {error && <p>{`Error: ${error}`}</p>}\n          {items.length > 0 && !error && !loading && (\n          <Contacts items={visibleContacts} onClick={onRemove} />\n          )}\n        </div>\n\n        <div>\n          <h2 className=\"title\">Contacts</h2>\n          <ContactForm onSubmit={onAdd} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from \"../../modules/PhoneBook\"\nconst ContactsPage = () => {\n  return (\n    <div className=\"container\">\n      <PhoneBook />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__aZIRC\"};","import PropTypes from \"prop-types\";\nimport s from \"./button.module.css\";\n\nconst Button = (props) => {\n  const { type, text, onClick } = props;\n  return (\n    <button className={s.btn} onClick={onClick} type={type}>\n      {text}\n    </button>\n  );\n};\nButton.defaultProps = {\n  type: \"submit\",\n  onClick: () => {},\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__qaF-n\",\"label\":\"text-field_label__VYX-y\",\"input\":\"text-field_input__YM8fs\"};","import { nanoid } from \"@reduxjs/toolkit\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./text-field.module.css\";\n\nconst TextField = (props) => {\n  const {\n    label,\n    name,\n    value,\n    onChange,\n    placeholder,\n    required,\n    type,\n    pattern,\n    title,\n  } = props;\n\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={id} className={s.label}>\n        {label}\n      </label>\n      <input\n        onChange={onChange}\n        id={id}\n        className={s.input}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        required={required}\n        pattern={pattern}\n        title={title}\n      />\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\",\n  required: false,\n  onChange: () => {},\n};\n\nTextField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ]).isRequired,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default TextField;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useForm = ({ onSubmit, initialState, isReset }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    if (isReset) {\n      setState({ ...initialState });\n    }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true,\n};\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired,\n};\n\nexport default useForm;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","store","contacts","ContactItem","props","name","number","onClick","id","className","s","Button","text","type","e","memo","Contacts","items","elements","map","item","defaultProps","initialState","fields","label","pattern","title","required","placeholder","ContactForm","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","onChange","Filter","useState","filter","setFilter","dispatch","useDispatch","contactsStore","useSelector","error","loading","useEffect","fetchContacts","onAdd","useCallback","el","addContact","onRemove","removeContact","changeFilter","target","trim","visibleContacts","toLowerCase","includes","length","useMemo","nanoid","htmlFor","isReset","setState","checked","newValue","prevState","preventDefault","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}